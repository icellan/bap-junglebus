{"version":3,"file":"collection.js","names":["Collection","collectionName","schema","extend","_id","type","String","_before","_after","selector","options","db","getDB","_runBeforeHook","collection","find","result","_runAfterHook","findOne","modifier","cleanModifier","_getCleanModifier","_hasHook","e","console","error","doc","updateOne","upsertedId","_hasAfterHook","updatedDoc","updateMany","cleanedDoc","_getCleanDoc","hasOwnProperty","Random","id","insertOne","deleteOne","deleteMany","action","callback","push","hook","_hasBeforeHook","i","length","call","clean","statusContext","newContext","validate","isValid","Error","validationErrors","cleanDoc"],"sources":["../../src/lib/collection.js"],"sourcesContent":["import { getDB } from './db';\n\n/**\n * Collection class helper for working with mongodb\n * TODO: refactor this into separate package\n */\nexport class Collection {\n  /**\n   * Constructor\n   *\n   * @param collectionName\n   * @param schema\n   */\n  constructor(collectionName, schema = false) {\n    this.collectionName = collectionName;\n    this.schema = schema;\n    if (schema) {\n      // add the default _id field to the schemas\n      this.schema.extend({\n        _id: { type: String },\n      });\n    }\n\n    this._before = {};\n    this._after = {};\n  }\n\n  /**\n   * Find documents and return an iterator\n   *\n   * @param selector\n   * @param options\n   * @returns {Promise<*>}\n   */\n  async find(selector = {}, options = {}) {\n    if (!this.db) this.db = await getDB();\n\n    await this._runBeforeHook('find', selector, options);\n\n    const result = await this.db.collection(this.collectionName)\n      .find(selector, options);\n\n    await this._runAfterHook('find', result);\n\n    return result;\n  }\n\n  /**\n   * Find exactly 1 document in mongodb and return as object\n   *\n   * @param selector\n   * @param options\n   * @returns {Promise<*>}\n   */\n  async findOne(selector = {}, options = {}) {\n    if (!this.db) this.db = await getDB();\n\n    await this._runBeforeHook('findOne', selector, options);\n\n    const result = await this.db.collection(this.collectionName)\n      .findOne(selector);\n\n    await this._runAfterHook('findOne', result);\n\n    return result;\n  }\n\n  /**\n   * Update only 1 document in mongodb\n   *\n   * @param selector\n   * @param modifier\n   * @param options\n   * @returns {Promise<*>}\n   */\n  async updateOne(selector, modifier, options = {}) {\n    if (!this.db) this.db = await getDB();\n\n    const cleanModifier = this._getCleanModifier(modifier);\n\n    if (this._hasHook('updateOne')) {\n      const doc = await this.findOne(selector)\n        .catch((e) => { console.error(e); });\n\n      await this._runBeforeHook('updateOne', doc, modifier, options);\n\n      const result = await this.db.collection(this.collectionName)\n        .updateOne(doc ? { _id: doc._id } : selector, cleanModifier, options);\n\n      /* eslint-disable no-nested-ternary */\n      const _id = (doc ? doc._id : (result.upsertedId ? result.upsertedId._id : null));\n\n      if (this._hasAfterHook('updateOne')) {\n        const updatedDoc = await this.findOne({ _id });\n        await this._runAfterHook('updateOne', updatedDoc, modifier, options);\n      }\n\n      return result;\n    }\n\n    return this.db.collection(this.collectionName)\n      .updateOne(selector, cleanModifier, options);\n  }\n\n  /**\n   * Update many documents in mongodb\n   *\n   * @param selector\n   * @param modifier\n   * @param options\n   * @returns {Promise<*>}\n   */\n  async updateMany(selector, modifier, options = {}) {\n    if (!this.db) this.db = await getDB();\n\n    await this._runBeforeHook('updateMany', selector, modifier, options);\n\n    const cleanModifier = this._getCleanModifier(modifier);\n    const result = await this.db.collection(this.collectionName)\n      .updateMany(selector, cleanModifier, options);\n\n    await this._runAfterHook('updateMany', selector, modifier, options);\n\n    return result;\n  }\n\n  /**\n   * Alias of updateMany\n   *\n   * @param selector\n   * @param modifier\n   * @param options\n   * @returns {Promise<*>}\n   */\n  async update(selector, modifier, options = {}) {\n    return this.updateMany(selector, modifier, options);\n  }\n\n  /**\n   * Insert a single document into mongodb\n   *\n   * @param doc\n   * @param options\n   * @returns {Promise<*>}\n   */\n  async insert(doc, options = {}) {\n    if (!this.db) this.db = await getDB();\n\n    await this._runBeforeHook('insert', doc, options);\n\n    const cleanedDoc = this._getCleanDoc(doc);\n\n    if (!cleanedDoc.hasOwnProperty('_id')) {\n      cleanedDoc._id = Random.id();\n    }\n\n    const result = await this.db.collection(this.collectionName)\n      .insertOne(cleanedDoc, options);\n\n    await this._runAfterHook('insert', cleanedDoc, options);\n\n    return result;\n  }\n\n  async deleteOne(selector, options) {\n    if (!this.db) this.db = await getDB();\n\n    await this._runBeforeHook('deleteOne', selector, options);\n\n    const result = await this.db.collection(this.collectionName)\n      .deleteOne(selector, options);\n\n    await this._runAfterHook('deleteOne', selector, options);\n\n    return result;\n  }\n\n  async deleteMany(selector, options) {\n    if (!this.db) this.db = await getDB();\n\n    await this._runBeforeHook('deleteMany', selector, options);\n\n    const result = await this.db.collection(this.collectionName)\n      .deleteMany(selector, options);\n\n    await this._runAfterHook('deleteMany', selector, options);\n\n    return result;\n  }\n\n  /**\n   * define hooks to call before a certain action is performed\n   *\n   * before('find', (selector, options) => {...} )\n   * before('findOne', (selector, options) => {...} )\n   * before('updateOne', (selector, modifier, options) => {...} )\n   * before('updateMany', (selector, modifier, options) => {...} )\n   * before('insert', (doc, options) => {...} )\n   */\n  before(action, callback) {\n    if (!this._before[action]) this._before[action] = [];\n    this._before[action].push(callback);\n  }\n\n  /**\n   * define hooks to call after a certain action is performed\n   *\n   * after('find', (selector, options) => {...} )\n   * after('findOne', (selector, options) => {...} )\n   * after('updateOne', (selector, modifier, options) => {...} )\n   * after('updateMany', (selector, modifier, options) => {...} )\n   * after('insert', (doc, options) => {...} )\n   *\n   */\n  after(action, callback) {\n    if (!this._after[action]) this._after[action] = [];\n    this._after[action].push(callback);\n  }\n\n  async _runBeforeHook(hook, selector, modifier, options) {\n    if (this._hasBeforeHook(hook)) {\n      for (let i = 0; i < this._before[hook].length; i++) {\n        const callback = this._before[hook][i];\n        await callback.call(this, selector, modifier, options);\n      }\n    }\n  }\n\n  async _runAfterHook(hook, selector, modifier, options) {\n    if (this._hasAfterHook(hook)) {\n      for (let i = 0; i < this._after[hook].length; i++) {\n        const callback = this._after[hook][i];\n        await callback.call(this, selector, modifier, options);\n      }\n    }\n  }\n\n  _hasHook(hook) {\n    return this._before.hasOwnProperty(hook) || this._after.hasOwnProperty(hook);\n  }\n\n  _hasBeforeHook(hook) {\n    return this._before.hasOwnProperty(hook);\n  }\n\n  _hasAfterHook(hook) {\n    return this._after.hasOwnProperty(hook);\n  }\n\n  _getCleanModifier(modifier) {\n    let cleanModifier = modifier;\n    if (this.schema) {\n      cleanModifier = this.schema.clean(modifier);\n      const statusContext = this.schema.newContext();\n      statusContext.validate(cleanModifier, { modifier: true });\n      if (!statusContext.isValid()) {\n        throw new Error(statusContext.validationErrors());\n      }\n    }\n\n    return cleanModifier;\n  }\n\n  _getCleanDoc(doc) {\n    let cleanDoc = doc;\n\n    if (this.schema) {\n      cleanDoc = this.schema.clean(doc);\n    }\n\n    return cleanDoc;\n  }\n}\n"],"mappings":"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"}