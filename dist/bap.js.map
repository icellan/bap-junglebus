{"version":3,"file":"bap.js","names":["FIRST_BAP_BLOCK","updateLastBlock","block","updateStatusValue","getLastBlockIndex","getStatusValue","lastBlockIndex","addBAPErrorTransaction","bapOp","Errors","updateOne","_id","txId","$set","upsert","isBase64","data","test","parseOpReturn","op","len","opReturn","i","AIP_BITCOM_ADDRESS","push","console","log","shift","opReturnGroups","group","length","BAP_BITCOM_ADDRESS","processBapTransaction","bapTransaction","bapQuery","processed","BAP","findOne","existing","bapId","timestamp","insert","parseBAPTransaction","bapCell","aipCell","bapDataCell","s","valid","validAIPSignature","type","hash","sequence","signatureAddress","processEvent","rawTx","BPU","parse","tx","r","split","token","include","event","h","Math","round","Date","out","tape","find","c","cell","error","JSON","stringify","Object","getOwnPropertyNames","watchBAPTransactions","subscriptionId","lastBlockIndexed","client","JungleBusClient","useSSL","onConnected","onConnecting","onDisconnected","onError","ctx","onPublish","transaction","block_height","block_time","onStatus","message","statusCode","ControlMessageStatusCode","BLOCK_DONE","ERROR","err","onMempool","Subscribe","SUBSCRIPTION_ID"],"sources":["../src/bap.js"],"sourcesContent":["import { JungleBusClient, ControlMessageStatusCode } from \"@gorillapool/js-junglebus\";\nimport BPU from 'bpu';\n\nimport {\n  AIP_BITCOM_ADDRESS,\n  BAP_BITCOM_ADDRESS,\n  SUBSCRIPTION_ID,\n} from './config';\nimport { BAP } from './schemas/bap';\nimport { Errors } from './schemas/errors';\nimport { validAIPSignature } from './aip';\nimport { getStatusValue, updateStatusValue } from './status';\nimport { exit } from 'yargs';\n\nexport const FIRST_BAP_BLOCK = 590000;\n\nexport const updateLastBlock = async function (block) {\n  return updateStatusValue('lastBlock', block);\n};\n\nexport const getLastBlockIndex = async function () {\n  const lastBlockIndex = await getStatusValue('lastBlock');\n  return lastBlockIndex ? Number(lastBlockIndex) : FIRST_BAP_BLOCK;\n};\n\nexport const addBAPErrorTransaction = async function (bapOp) {\n  return Errors.updateOne({\n    _id: bapOp.txId,\n  }, {\n    $set: bapOp,\n  }, {\n    upsert: true,\n  });\n};\n\n/**\n * Check whether the given data is base64\n *\n * @param data\n * @returns {boolean}\n */\nexport const isBase64 = function (data) {\n  const regex = '(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?';\n  return (new RegExp('^' + regex + '$', 'gi')).test(data);\n};\n\n/**\n * Get clean op_return from the bitbus output\n */\nexport const parseOpReturn = function (op) {\n  const { len } = op;\n  const opReturn = [];\n\n  /* eslint-disable no-plusplus */\n  for (let i = 0; i < len; i++) {\n    // :-( this is disgusting - must do better\n    if (op[`s${i - 3}`] === AIP_BITCOM_ADDRESS) {\n      // sometimes the AIP signatures are put on-chain as base64, sometimes as binary\n      // we must check whether this was a base64 and use that\n      if (op[`s${i}`] && isBase64(op[`s${i}`])) {\n        opReturn.push(op[`s${i}`]);\n      } else {\n        opReturn.push(op[`b${i}`]);\n      }\n    } else {\n      opReturn.push(op[`s${i}`] || op[`o${i}`] || op[`h${i}`] || op[`b${i}`]);\n    }\n  }\n\n  console.log({opReturn})\n\n  if (opReturn[0] === 'OP_0') {\n    opReturn.shift();\n  }\n  opReturn.shift(); // remove the OP_RETURN command\n\n  const opReturnGroups = {\n    [opReturn[0]]: [],\n  };\n  let group = opReturn[0]; // first bitcom address - should be BAP\n  /* eslint-disable no-plusplus */\n  for (let i = 0; i < opReturn.length; i++) {\n    if (opReturn[i] === '|') {\n      group = opReturn[i + 1];\n      if (group === BAP_BITCOM_ADDRESS) {\n        // second BAP op_return, should only be DATA, otherwise invalid\n        if (opReturn[i + 2] === 'DATA') {\n          // check whether the hashes match\n          if (opReturn[i + 3] === opReturnGroups[BAP_BITCOM_ADDRESS][2]) {\n            opReturnGroups[BAP_BITCOM_ADDRESS].push(opReturn[i + 4]);\n          }\n        }\n        i += 4;\n      } else {\n        opReturnGroups[group] = [];\n      }\n    } else {\n      opReturnGroups[group].push(opReturn[i]);\n    }\n  }\n\n  return opReturnGroups;\n};\n\nexport const processBapTransaction = async function (bapTransaction) {\n  if (!bapTransaction) return;\n\n  const bapQuery = { _id: bapTransaction.txId, ...bapTransaction };\n  delete bapQuery.txId;\n  bapQuery.processed = false;\n\n  const existing = await BAP.findOne({ _id: bapQuery._id });\n  if (existing) {\n    const bapId = bapQuery._id;\n    delete bapQuery._id;\n    if (existing.timestamp) {\n      // do not update timestamp if already set, we'll use the original one from the mempool\n      delete bapQuery.timestamp;\n    }\n\n    await BAP.updateOne({\n      _id: bapId,\n    }, {\n      $set: bapQuery,\n    });\n  } else {\n    await BAP.insert(bapQuery);\n  }\n};\n\n/**\n * Naive and quick and dirty parser for BAP transactions\n *\n * This should be improved and put into a generic BOB parser, like https://github.com/BitcoinSchema/go-bob\n * Example:\n *  {\n      op: {\n        i: 0,\n        e: { v: 0, i: 0, a: 'false' },\n        len: 11,\n        o0: 'OP_0',\n        o1: 'OP_RETURN',\n        s2: '1BAPSuaPnfGnSBM3GLV9yhxUdYe4vGbdMT',\n        b2: 'MUJBUFN1YVBuZkduU0JNM0dMVjl5aHhVZFllNHZHYmRNVA==',\n        h2: '31424150537561506e66476e53424d33474c56397968785564596534764762644d54',\n        s3: 'ATTEST',\n        b3: 'QVRURVNU',\n        h3: '415454455354',\n        s4: 'b26bb30516fb447ba75ffca3c61f9d353fdb57e100bd49a201701132c2742fd6',\n        b4: 'YjI2YmIzMDUxNmZiNDQ3YmE3NWZmY2EzYzYxZjlkMzUzZmRiNTdlMTAwYmQ0OWEyMDE3MDExMzJjMjc0MmZkNg==',\n        h4: '62323662623330353136666234343762613735666663613363363166396433353366646235376531303062643439613230313730313133326332373432666436',\n        s5: '0',\n        b5: 'MA==',\n        h5: '30',\n        s6: '|',\n        b6: 'fA==',\n        h6: '7c',\n        s7: '15PciHG22SNLQJXMoSUaWVi7WSqc7hCfva',\n        b7: 'MTVQY2lIRzIyU05MUUpYTW9TVWFXVmk3V1NxYzdoQ2Z2YQ==',\n        h7: '313550636948473232534e4c514a584d6f5355615756693757537163376843667661',\n        s8: 'BITCOIN_ECDSA',\n        b8: 'QklUQ09JTl9FQ0RTQQ==',\n        h8: '424954434f494e5f4543445341',\n        s9: '134a6TXxzgQ9Az3w8BcvgdZyA5UqRL89da',\n        b9: 'MTM0YTZUWHh6Z1E5QXozdzhCY3ZnZFp5QTVVcVJMODlkYQ==',\n        h9: '31333461365458787a675139417a33773842637667645a7941355571524c38396461',\n        s10: '\\u001f)��\\\\�E�t�\\b�+\\u0013�n1�j���W\\u000e�3���\\u0007�)M�C�m��\\u0005\\u0014�\\u001a\\fݼ���s\\u001cG`\\u0007YtW��lQ*�',\n        b10: 'HymivVy7RZ105gjtKxPwf25/MdRqwbT9Vw6QM+27tgenKU24Q/Bts70FFMIaDN28/4GgcxxHYAdZdFeunGxRKuE=',\n        h10: '1f29a2bd5cbb459d74e608ed2b13f07f6e7f31d46ac1b4fd570e9033edbbb607a7294db843f06db3bd0514c21a0cddbcff81a0731c476007597457ae9c6c512ae1'\n      }\n    }\n *\n * @param bapCell\n * @param aipCell\n * @param bapDataCell\n */\nexport const parseBAPTransaction = function (bapCell, aipCell, bapDataCell) {\n\n  if (\n    !bapCell\n    || !bapCell[0]\n    || bapCell[0].s !== BAP_BITCOM_ADDRESS\n    || !bapCell[1].s\n    || !bapCell[2].s\n    || !bapCell[3].s\n  ) {\n    return false;\n  }\n\n  const valid = validAIPSignature(bapCell, aipCell, bapDataCell);\n  if (!valid) {\n    return false;\n  }\n\n  const bapTransaction = {\n    type: bapCell[1].s,\n    hash: bapCell[2].s,\n    sequence: bapCell[3].s,\n    signatureAddress: aipCell[2].s,\n  };\n\n  if (bapDataCell && bapDataCell[2].s === bapCell[2].s) {\n    // data included\n    /* eslint-disable prefer-destructuring */\n    bapTransaction.data = bapDataCell[3].s;\n  }\n\n  return bapTransaction;\n};\n\nexport const processEvent = async function (rawTx, block, timestamp) {\n  let event =  await BPU.parse({\n    tx: { r: rawTx },\n    split: [\n      {\n        token: { op: 106 },\n        include: 'l',\n      },\n      {\n        token: { op: 0 },\n        include: 'l',\n      },\n      {\n        token: { s: '|' },\n      },\n    ],\n  });\n\n  const txId = event.tx.h;\n  timestamp = timestamp || Math.round(+new Date() / 1000);\n\n  if (event?.out) {\n    /* eslint-disable no-restricted-syntax */\n    for (const out of event.out) {\n      let bapCell = out.tape.find(c => {\n        return c.cell[0].s === BAP_BITCOM_ADDRESS && c.cell[1].s !== 'DATA'\n      })\n      const bapDataCell = out.tape.find(c => {\n        return c.cell[0].s === BAP_BITCOM_ADDRESS && c.cell[1].s === 'DATA'\n      })\n      const aipCell = out.tape.find(c => {\n        return c.cell[0].s === AIP_BITCOM_ADDRESS\n      })\n\n      if (bapDataCell && !bapCell) {\n        bapCell = bapDataCell;\n      }\n\n      if (bapCell?.cell && aipCell?.cell) {\n        try {\n          console.log('got BAP transaction', txId, block || 'mempool');\n          const bapOp = parseBAPTransaction(bapCell.cell, aipCell.cell, bapDataCell?.cell);\n          if (bapOp) {\n            bapOp.txId = txId;\n            bapOp.block = block;\n            bapOp.timestamp = timestamp;\n\n            /* eslint-disable no-await-in-loop */\n            await processBapTransaction(bapOp);\n          } else {\n            out.txId = txId;\n            out.block = block;\n            await addBAPErrorTransaction(out);\n          }\n        } catch (e) {\n          out.txId = txId;\n          out.block = block;\n          out.error = JSON.stringify(e, Object.getOwnPropertyNames(e));\n          await addBAPErrorTransaction(out);\n        }\n      }\n    }\n  }\n};\n\nexport const watchBAPTransactions = async function (subscriptionId) {\n  const lastBlockIndexed = await getLastBlockIndex();\n\n  const client = new JungleBusClient(\"junglebus.gorillapool.io\", {\n    useSSL: true,\n    onConnected(ctx) {\n      //console.log(\"CONNECTED\", ctx);\n    },\n    onConnecting(ctx) {\n      //console.log(\"CONNECTING\", ctx);\n    },\n    onDisconnected(ctx) {\n      //console.log(\"DISCONNECTED\", ctx);\n    },\n    onError(ctx) {\n      console.error(ctx);\n    },\n  });\n\n  const onPublish = async function(tx) {\n    await processEvent(tx.transaction, tx.block_height, tx.block_time)\n  };\n  const onStatus = async function(message) {\n    if (message.statusCode === ControlMessageStatusCode.BLOCK_DONE) {\n      await updateLastBlock(message.block)\n    } else if (message.statusCode === ControlMessageStatusCode.ERROR) {\n      console.error(message);\n    }\n  };\n  const onError = function(err) {\n    console.error(err);\n  };\n  const onMempool = async function(tx) {\n    await processEvent(tx.transaction, 0, 0)\n  };\n\n  return client.Subscribe(subscriptionId || SUBSCRIPTION_ID, lastBlockIndexed, onPublish, onStatus, onError, onMempool);\n};\n"],"mappings":"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"}